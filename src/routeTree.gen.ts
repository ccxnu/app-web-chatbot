/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as AuthenticatedSistemaUsuariosRouteRouteImport } from './routes/_authenticated/sistema/usuarios/route'
import { Route as AuthenticatedSistemaPermisosRouteRouteImport } from './routes/_authenticated/sistema/permisos/route'
import { Route as AuthenticatedSistemaParametrosRouteRouteImport } from './routes/_authenticated/sistema/parametros/route'
import { Route as AuthenticatedSistemaFuncionalidadesRouteRouteImport } from './routes/_authenticated/sistema/funcionalidades/route'
import { Route as AuthenticatedSistemaModulosIndexRouteImport } from './routes/_authenticated/sistema/modulos/index'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSistemaUsuariosRouteRoute =
  AuthenticatedSistemaUsuariosRouteRouteImport.update({
    id: '/sistema/usuarios',
    path: '/sistema/usuarios',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSistemaPermisosRouteRoute =
  AuthenticatedSistemaPermisosRouteRouteImport.update({
    id: '/sistema/permisos',
    path: '/sistema/permisos',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSistemaParametrosRouteRoute =
  AuthenticatedSistemaParametrosRouteRouteImport.update({
    id: '/sistema/parametros',
    path: '/sistema/parametros',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSistemaFuncionalidadesRouteRoute =
  AuthenticatedSistemaFuncionalidadesRouteRouteImport.update({
    id: '/sistema/funcionalidades',
    path: '/sistema/funcionalidades',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSistemaModulosIndexRoute =
  AuthenticatedSistemaModulosIndexRouteImport.update({
    id: '/sistema/modulos/',
    path: '/sistema/modulos/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/sistema/funcionalidades': typeof AuthenticatedSistemaFuncionalidadesRouteRoute
  '/sistema/parametros': typeof AuthenticatedSistemaParametrosRouteRoute
  '/sistema/permisos': typeof AuthenticatedSistemaPermisosRouteRoute
  '/sistema/usuarios': typeof AuthenticatedSistemaUsuariosRouteRoute
  '/sistema/modulos': typeof AuthenticatedSistemaModulosIndexRoute
}
export interface FileRoutesByTo {
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/sistema/funcionalidades': typeof AuthenticatedSistemaFuncionalidadesRouteRoute
  '/sistema/parametros': typeof AuthenticatedSistemaParametrosRouteRoute
  '/sistema/permisos': typeof AuthenticatedSistemaPermisosRouteRoute
  '/sistema/usuarios': typeof AuthenticatedSistemaUsuariosRouteRoute
  '/sistema/modulos': typeof AuthenticatedSistemaModulosIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/sistema/funcionalidades': typeof AuthenticatedSistemaFuncionalidadesRouteRoute
  '/_authenticated/sistema/parametros': typeof AuthenticatedSistemaParametrosRouteRoute
  '/_authenticated/sistema/permisos': typeof AuthenticatedSistemaPermisosRouteRoute
  '/_authenticated/sistema/usuarios': typeof AuthenticatedSistemaUsuariosRouteRoute
  '/_authenticated/sistema/modulos/': typeof AuthenticatedSistemaModulosIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/sistema/funcionalidades'
    | '/sistema/parametros'
    | '/sistema/permisos'
    | '/sistema/usuarios'
    | '/sistema/modulos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/sistema/funcionalidades'
    | '/sistema/parametros'
    | '/sistema/permisos'
    | '/sistema/usuarios'
    | '/sistema/modulos'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/sistema/funcionalidades'
    | '/_authenticated/sistema/parametros'
    | '/_authenticated/sistema/permisos'
    | '/_authenticated/sistema/usuarios'
    | '/_authenticated/sistema/modulos/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/sistema/usuarios': {
      id: '/_authenticated/sistema/usuarios'
      path: '/sistema/usuarios'
      fullPath: '/sistema/usuarios'
      preLoaderRoute: typeof AuthenticatedSistemaUsuariosRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/sistema/permisos': {
      id: '/_authenticated/sistema/permisos'
      path: '/sistema/permisos'
      fullPath: '/sistema/permisos'
      preLoaderRoute: typeof AuthenticatedSistemaPermisosRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/sistema/parametros': {
      id: '/_authenticated/sistema/parametros'
      path: '/sistema/parametros'
      fullPath: '/sistema/parametros'
      preLoaderRoute: typeof AuthenticatedSistemaParametrosRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/sistema/funcionalidades': {
      id: '/_authenticated/sistema/funcionalidades'
      path: '/sistema/funcionalidades'
      fullPath: '/sistema/funcionalidades'
      preLoaderRoute: typeof AuthenticatedSistemaFuncionalidadesRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/sistema/modulos/': {
      id: '/_authenticated/sistema/modulos/'
      path: '/sistema/modulos'
      fullPath: '/sistema/modulos'
      preLoaderRoute: typeof AuthenticatedSistemaModulosIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedSistemaFuncionalidadesRouteRoute: typeof AuthenticatedSistemaFuncionalidadesRouteRoute
  AuthenticatedSistemaParametrosRouteRoute: typeof AuthenticatedSistemaParametrosRouteRoute
  AuthenticatedSistemaPermisosRouteRoute: typeof AuthenticatedSistemaPermisosRouteRoute
  AuthenticatedSistemaUsuariosRouteRoute: typeof AuthenticatedSistemaUsuariosRouteRoute
  AuthenticatedSistemaModulosIndexRoute: typeof AuthenticatedSistemaModulosIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedSistemaFuncionalidadesRouteRoute:
    AuthenticatedSistemaFuncionalidadesRouteRoute,
  AuthenticatedSistemaParametrosRouteRoute:
    AuthenticatedSistemaParametrosRouteRoute,
  AuthenticatedSistemaPermisosRouteRoute:
    AuthenticatedSistemaPermisosRouteRoute,
  AuthenticatedSistemaUsuariosRouteRoute:
    AuthenticatedSistemaUsuariosRouteRoute,
  AuthenticatedSistemaModulosIndexRoute: AuthenticatedSistemaModulosIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
